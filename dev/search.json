[{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://remlapmot.github.io/OneSampleMR/dev/articles/compare-smm-fits.html","id":"comparison-fits","dir":"Articles","previous_headings":"","what":"Comparison fits","title":"Comparison fits of the multiplicative structural mean model","text":"Example ivtools ivglm() helpfile. First simulate example data. Comparison fit using msmm(). Comparison fit using alternative GMM moment conditions. Comparison fit using transformed variables using two-stage least squares. Comparison fit using alternative transformed variables approach using two-stage least squares.","code":"set.seed(12345) n    <- 5000 psi0 <- 0.5 psi1 <- 0.2 Z    <- rbinom(n, 1, 0.5) X    <- rbinom(n, 1, 0.7*Z + 0.2*(1 - Z))  m0   <- plogis(1 + 0.8*X - 0.39*Z) Y    <- rbinom(n, 1, plogis(psi0*X + log(m0/(1 - m0))))  dat  <- data.frame(Z, X, Y) fit02 <- msmm(Y ~ X | Z, data = dat) summary(fit02) #>  #> Estimation method: gmm  #>  #> GMM fit summary: #>  #> Call: #> gmm::gmm(g = msmmMoments, x = dat, t0 = t0, vcov = \"iid\") #>  #>  #> Method:  twoStep  #>  #> Coefficients: #>           Estimate    Std. Error  t value     Pr(>|t|)   #> Theta[1]  7.4993e-01  1.2332e-02  6.0810e+01  0.0000e+00 #> Theta[2]  1.0198e-01  2.8219e-02  3.6140e+00  3.0156e-04 #>  #> J-Test: degrees of freedom is 0  #>                 J-test                P-value              #> Test E(g)=0:    3.31877269936619e-06  *******              #>  #> ############# #> Information related to the numerical optimization #> Convergence code =  0  #> Function eval. =  61  #> Gradian eval. =  NA  #>  #> E[Y(0)] with 95% CI: #>         0.025  0.975  #> 0.7499 0.7258 0.7741  #>  #> Causal risk ratio with 95% CI: #>     CRR 0.025 0.975 #> X 1.107 1.048  1.17 fit03 <- msmm(Y ~ X | Z, data = dat, estmethod = \"gmmalt\") summary(fit03) #>  #> Estimation method: gmmalt  #>  #> GMM fit summary: #>  #> Call: #> gmm::gmm(g = msmmAltMoments, x = dat, t0 = t0, vcov = \"iid\") #>  #>  #> Method:  twoStep  #>  #> Coefficients: #>           Estimate     Std. Error   t value      Pr(>|t|)    #> Theta[1]  -2.8759e-01   1.6444e-02  -1.7489e+01   1.7357e-68 #> Theta[2]   1.0173e-01   2.8217e-02   3.6053e+00   3.1178e-04 #>  #> J-Test: degrees of freedom is 0  #>                 J-test                P-value              #> Test E(g)=0:    3.75832932731903e-06  *******              #>  #> ############# #> Information related to the numerical optimization #> Convergence code =  0  #> Function eval. =  55  #> Gradian eval. =  NA  #>  #> E[Y(0)] with 95% CI: #>         0.025  0.975  #> 0.7501 0.7263 0.7746  #>  #> Causal risk ratio with 95% CI: #>     CRR 0.025 0.975 #> X 1.107 1.048  1.17 fit04 <- msmm(Y ~ X | Z, data = dat, estmethod = \"tsls\") summary(fit04) #>  #> Estimation method: tsls  #>  #> Stage 1 summary: #>  #> Call: #> stats::lm(formula = exposure ~ z) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -0.6206 -0.1873 -0.1873  0.3794  0.8127  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 0.187272   0.008878   21.09   <2e-16 *** #> z           0.433336   0.012474   34.74   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.441 on 4998 degrees of freedom #> Multiple R-squared:  0.1945, Adjusted R-squared:  0.1943  #> F-statistic:  1207 on 1 and 4998 DF,  p-value: < 2.2e-16 #>  #> TSLS fit summary: #>  #> Call: #> ivreg::ivreg(formula = outcome ~ exposure | z) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -0.7500  0.1532  0.1532  0.2500  0.2500  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.75000    0.01173   63.95   <2e-16 *** #> exposure    -0.90315    0.02545  -35.49   <2e-16 *** #>  #> Diagnostic tests: #>                   df1  df2 statistic p-value     #> Weak instruments    1 4998    1206.9  <2e-16 *** #> Wu-Hausman          1 4997     147.1  <2e-16 *** #> Sargan              0   NA        NA      NA     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.3898 on 4998 degrees of freedom #> Multiple R-Squared: 0.3569,  Adjusted R-squared: 0.3567  #> Wald test:  1260 on 1 and 4998 DF,  p-value: < 2.2e-16  #>  #>  #> E[Y(0)] with 95% CI: #>         2.5 % 97.5 %  #>  0.750  0.727  0.773  #>  #> Causal risk ratio with 95% CI: #> [1] 1.107 1.048 1.170 fit05 <- msmm(Y ~ X | Z, data = dat, estmethod = \"tslsalt\") summary(fit05) #>  #> Estimation method: tslsalt  #>  #> Stage 1 summary: #>  #> Call: #> stats::lm(formula = exposure ~ z) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -0.5809 -0.1895 -0.1895  0.4191  0.8105  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.580867   0.008959   64.84   <2e-16 *** #> z           -0.391369   0.012587  -31.09   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.445 on 4998 degrees of freedom #> Multiple R-squared:  0.1621, Adjusted R-squared:  0.1619  #> F-statistic: 966.8 on 1 and 4998 DF,  p-value: < 2.2e-16 #>  #> TSLS fit summary: #>  #> Call: #> ivreg::ivreg(formula = outcome ~ exposure | z) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -0.8304  0.1696  0.1696  0.2768  0.2768  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.83043    0.01341   61.94   <2e-16 *** #> exposure    -1.10723    0.03120  -35.49   <2e-16 *** #>  #> Diagnostic tests: #>                   df1  df2 statistic p-value     #> Weak instruments    1 4998     966.8  <2e-16 *** #> Wu-Hausman          1 4997     354.2  <2e-16 *** #> Sargan              0   NA        NA      NA     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.4316 on 4998 degrees of freedom #> Multiple R-Squared: 0.2282,  Adjusted R-squared: 0.2281  #> Wald test:  1260 on 1 and 4998 DF,  p-value: < 2.2e-16  #>  #>  #> Causal risk ratio with 95% CI: #> [1] 1.107 1.048 1.170"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/articles/f-statistic-comparison.html","id":"run-fsw-on-ivreg-model-object","dir":"Articles","previous_headings":"","what":"Run fsw() on ivreg() model object","title":"Comparison of conditional F-statistics","text":"","code":"url <- \"http://fmwww.bc.edu/ec-p/data/wooldridge/mroz.dta\" dat <- haven::read_dta(url) mod <- ivreg(lwage ~ educ + exper | age + kidslt6 + kidsge6, data = dat) summary(mod) #>  #> Call: #> ivreg(formula = lwage ~ educ + exper | age + kidslt6 + kidsge6,  #>     data = dat) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -3.04973 -0.30711  0.05531  0.38952  2.27672  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)   #> (Intercept) -0.360182   1.033416  -0.349    0.728   #> educ         0.105836   0.080982   1.307    0.192   #> exper        0.016153   0.007595   2.127    0.034 * #>  #> Diagnostic tests: #>                          df1 df2 statistic p-value     #> Weak instruments (educ)    3 424     4.466 0.00421 **  #> Weak instruments (exper)   3 424    55.044 < 2e-16 *** #> Wu-Hausman                 2 423     0.004 0.99609     #> Sargan                     1  NA     1.168 0.27976     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.669 on 425 degrees of freedom #> Multiple R-Squared: 0.1482,  Adjusted R-squared: 0.1442  #> Wald test: 3.034 on 2 and 425 DF,  p-value: 0.04917 fsw(mod) #>  #> Model sample size:  428  #>  #> Sanderson-Windmeijer conditional F-statistics for first stage model: #>        F value d.f. Residual d.f.   Pr(>F)     #> educ   6.69425    2           424 0.001373 **  #> exper 81.81237    2           424  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/articles/f-statistic-comparison.html","id":"comparison-with-f-statistic-from-lfe-package","dir":"Articles","previous_headings":"","what":"Comparison with F-statistic from lfe package","title":"Comparison of conditional F-statistics","text":"","code":"modst2 <- felm(lwage ~ 1 | 0 | (educ | exper ~ age + kidslt6 + kidsge6),                  data = dat) summary(modst2) #>  #> Call: #>    felm(formula = lwage ~ 1 | 0 | (educ | exper ~ age + kidslt6 +      kidsge6), data = dat)  #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -3.04973 -0.30711  0.05531  0.38952  2.27672  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)   #> (Intercept)  -0.360182   1.033416  -0.349    0.728   #> `educ(fit)`   0.105836   0.080982   1.307    0.192   #> `exper(fit)`  0.016153   0.007595   2.127    0.034 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.669 on 425 degrees of freedom #>   (325 observations deleted due to missingness) #> Multiple R-squared(full model): 0.1482   Adjusted R-squared: 0.1442  #> Multiple R-squared(proj model): 0.1482   Adjusted R-squared: 0.1442  #> F-statistic(full model):3.034 on 2 and 425 DF, p-value: 0.04917  #> F-statistic(proj model): 3.034 on 2 and 425 DF, p-value: 0.04917  #> F-statistic(endog. vars):3.034 on 2 and 425 DF, p-value: 0.04917 t(sapply(modst2$stage1$lhs,           function(lh) waldtest(modst2$stage1,                                 ~ age | kidslt6 | kidsge6, lhs = lh))) #>                  p      chi2 df1          p.F         F df2 #> educ  3.849465e-03  13.39851   3 4.210326e-03  4.466172 424 #> exper 1.429780e-35 165.13309   3 4.561549e-30 55.044363 424 condfstat(modst2, quantiles = c(0.025, 0.975)) #>           educ    exper #> iid F 6.710039 82.00533 #> attr(,\"df1\") #> [1] 2 #> attr(,\"quantiles\") #>                2.5%      97.5% #> educ  -0.0808003007 0.25850072 #> exper  0.0008784942 0.03091819 #> attr(,\"quantiles\")attr(,\"q\") #> [1] 0.025 0.975 #> attr(,\"quantiles\")attr(,\"samples\") #> [1] 100"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/articles/f-statistic-comparison.html","id":"comparison-with-output-from-ivreg2","dir":"Articles","previous_headings":"","what":"Comparison with output from ivreg2","title":"Comparison of conditional F-statistics","text":"Code run using Stata version 16.1.","code":"use http://fmwww.bc.edu/ec-p/data/wooldridge/mroz.dta, clear  // ssc install ivreg2 ivreg2 lwage (educ exper = age kidslt6 kidsge6) if !missing(lwage, educ, exper, age, kidslt6, kidsge6), first First-stage regressions -----------------------   First-stage regression of educ:  Statistics consistent for homoskedasticity only Number of obs =                    428 ------------------------------------------------------------------------------         educ |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval] -------------+----------------------------------------------------------------          age |  -.0185412   .0163449    -1.13   0.257    -.0506683    .0135859      kidslt6 |   .6984283   .2966854     2.35   0.019     .1152709    1.281586      kidsge6 |   -.222821   .0906154    -2.46   0.014    -.4009324   -.0447096        _cons |   13.64009   .7644499    17.84   0.000     12.13751    15.14268 ------------------------------------------------------------------------------ F test of excluded instruments:   F(  3,   424) =     4.47   Prob > F      =   0.0042 Sanderson-Windmeijer multivariate F test of excluded instruments:   F(  2,   424) =     6.69   Prob > F      =   0.0014   First-stage regression of exper:  Statistics consistent for homoskedasticity only Number of obs =                    428 ------------------------------------------------------------------------------        exper |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval] -------------+----------------------------------------------------------------          age |   .3948754   .0496446     7.95   0.000     .2972953    .4924555      kidslt6 |  -.7469412   .9011267    -0.83   0.408    -2.518173    1.024291      kidsge6 |  -1.430306   .2752275    -5.20   0.000    -1.971286   -.8893254        _cons |  -1.500019   2.321874    -0.65   0.519    -6.063837    3.063798 ------------------------------------------------------------------------------ F test of excluded instruments:   F(  3,   424) =    55.04   Prob > F      =   0.0000 Sanderson-Windmeijer multivariate F test of excluded instruments:   F(  2,   424) =    81.81   Prob > F      =   0.0000    Summary results for first-stage regressions -------------------------------------------                                             (Underid)            (Weak id) Variable     | F(  3,   424)  P-val | SW Chi-sq(  2) P-val | SW F(  2,   424) educ         |       4.47    0.0042 |       13.51   0.0012 |        6.69 exper        |      55.04    0.0000 |      165.17   0.0000 |       81.81  Stock-Yogo weak ID F test critical values for single endogenous regressor:                                     5% maximal IV relative bias    13.91                                    10% maximal IV relative bias     9.08                                    20% maximal IV relative bias     6.46                                    30% maximal IV relative bias     5.39                                    10% maximal IV size             22.30                                    15% maximal IV size             12.83                                    20% maximal IV size              9.54                                    25% maximal IV size              7.80 Source: Stock-Yogo (2005).  Reproduced by permission. NB: Critical values are for Sanderson-Windmeijer F statistic.  Underidentification test Ho: matrix of reduced form coefficients has rank=K1-1 (underidentified) Ha: matrix has rank=K1 (identified) Anderson canon. corr. LM statistic       Chi-sq(2)=13.10    P-val=0.0014  Weak identification test Ho: equation is weakly identified Cragg-Donald Wald F statistic                                       4.46  Stock-Yogo weak ID test critical values for K1=2 and L1=3:                                    10% maximal IV size             13.43                                    15% maximal IV size              8.18                                    20% maximal IV size              6.40                                    25% maximal IV size              5.45 Source: Stock-Yogo (2005).  Reproduced by permission.  Weak-instrument-robust inference Tests of joint significance of endogenous regressors B1 in main equation Ho: B1=0 and orthogonality conditions are valid Anderson-Rubin Wald test           F(3,424)=       2.08     P-val=0.1025 Anderson-Rubin Wald test           Chi-sq(3)=      6.29     P-val=0.0983 Stock-Wright LM S statistic        Chi-sq(3)=      6.20     P-val=0.1023  Number of observations               N  =        428 Number of regressors                 K  =          3 Number of endogenous regressors      K1 =          2 Number of instruments                L  =          4 Number of excluded instruments       L1 =          3  IV (2SLS) estimation --------------------  Estimates efficient for homoskedasticity only Statistics consistent for homoskedasticity only                                                        Number of obs =      428                                                       F(  2,   425) =     3.03                                                       Prob > F      =   0.0492 Total (centered) SS     =  223.3274513                Centered R2   =   0.1482 Total (uncentered) SS   =   829.594813                Uncentered R2 =   0.7707 Residual SS             =  190.2315236                Root MSE      =    .6667  ------------------------------------------------------------------------------        lwage |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval] -------------+----------------------------------------------------------------         educ |   .1058361   .0806975     1.31   0.190    -.0523281    .2640003        exper |   .0161527    .007568     2.13   0.033     .0013197    .0309858        _cons |  -.3601821   1.029787    -0.35   0.727    -2.378528    1.658164 ------------------------------------------------------------------------------ Underidentification test (Anderson canon. corr. LM statistic):          13.101                                                    Chi-sq(2) P-val =    0.0014 ------------------------------------------------------------------------------ Weak identification test (Cragg-Donald Wald F statistic):                4.463 Stock-Yogo weak ID test critical values: 10% maximal IV size             13.43                                          15% maximal IV size              8.18                                          20% maximal IV size              6.40                                          25% maximal IV size              5.45 Source: Stock-Yogo (2005).  Reproduced by permission. ------------------------------------------------------------------------------ Sargan statistic (overidentification test of all instruments):           1.168                                                    Chi-sq(1) P-val =    0.2798 ------------------------------------------------------------------------------ Instrumented:         educ exper Excluded instruments: age kidslt6 kidsge6 ------------------------------------------------------------------------------"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tom Palmer. Author, maintainer. Wes Spiller. Author. Eleanor Sanderson. Author.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Palmer T, Spiller W, Sanderson E (2023). OneSampleMR: One Sample Mendelian Randomization Instrumental Variable Analyses. MRC Integrative Epidemiology Unit, University Bristol, Bristol, UK. https://remlapmot.github.io/OneSampleMR/.","code":"@Manual{onesamplemr,   title = {{OneSampleMR: One Sample Mendelian Randomization and Instrumental Variable Analyses}},   author = {Tom Palmer and Wes Spiller and Eleanor Sanderson},   year = {2023},   organization = {MRC Integrative Epidemiology Unit, University of Bristol},   address = {Bristol, UK},   url = {https://remlapmot.github.io/OneSampleMR/}, }"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/index.html","id":"onesamplemr","dir":"","previous_headings":"","what":"One Sample Mendelian Randomization and Instrumental Variable Analyses","title":"One Sample Mendelian Randomization and Instrumental Variable Analyses","text":"Useful functions one sample, individual level data, Mendelian randomization / instrumental variable analyses, including implementations : Sanderson Windmeijer (2016) conditional F-statistic multiple exposure models. Multiplicative structural mean model (Robins, 1989; Hernán Robins, 2006) Two-stage predictor substitution estimators (Terza, 2008) Two-stage residual inclusion estimators (Terza, 2008) OneSampleMR included R Views November 2021 “Top 40” New CRAN Packages !","code":""},{"path":[]},{"path":"https://remlapmot.github.io/OneSampleMR/dev/index.html","id":"released-version","dir":"","previous_headings":"Installation","what":"Released version","title":"One Sample Mendelian Randomization and Instrumental Variable Analyses","text":"Install package CRAN using check updates run","code":"install.packages(\"OneSampleMR\") update.packages()"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/index.html","id":"issue-with-gmm-package-versions-16-5-16-6-17-on-macos","dir":"","previous_headings":"Installation","what":"Issue with gmm package versions 1.6-5, 1.6-6, 1.7 on macOS","title":"One Sample Mendelian Randomization and Instrumental Variable Analyses","text":"Using old versions gmm package, GNU Fortran installation required even binary version package installed. fix update current version gmm, version 1.8. update version gmm current version GNU Fortran install documented available Note version Fortran available Homebrew probably work","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"One Sample Mendelian Randomization and Instrumental Variable Analyses","text":"Install development version package source GitHub using check install updates development version run previous command run binary development version package (Windows, macOS, Ubuntu Jammy Jellyfish) can installed r-universe using can updated using","code":"# install.packages(\"remotes\") # uncomment on first run remotes::install_github(\"remlapmot/OneSampleMR\") remotes::update_packages() install.packages('OneSampleMR', repos = c('https://remlapmot.r-universe.dev', 'https://cloud.r-project.org')) update.packages(repos = c('https://remlapmot.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/OneSampleMR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OneSampleMR: One Sample Mendelian Randomization and Instrumental Variable Analyses — OneSampleMR-package","title":"OneSampleMR: One Sample Mendelian Randomization and Instrumental Variable Analyses — OneSampleMR-package","text":"Useful functions one-sample (individual level data) Mendelian randomization instrumental variable analyses. package includes implementations ; Sanderson Windmeijer (2016) doi:10.1016/j.jeconom.2015.06.004  conditional F-statistic, multiplicative structural mean model Hernán Robins (2006) doi:10.1097/01.ede.0000222409.00878.37 , two-stage predictor substitution two-stage residual inclusion estimators explained Terza et al. (2008) doi:10.1016/j.jhealeco.2007.09.009 .","code":""},{"path":[]},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/OneSampleMR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OneSampleMR: One Sample Mendelian Randomization and Instrumental Variable Analyses — OneSampleMR-package","text":"Maintainer: Tom Palmer remlapmot@hotmail.com (ORCID) Authors: Wes Spiller wes.spiller@bristol.ac.uk (ORCID) Eleanor Sanderson eleanor.sanderson@bristol.ac.uk (ORCID)","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/asmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Additive structural mean model — asmm","title":"Additive structural mean model — asmm","text":"asmm function. helpfile note additive structural mean model (ASMM) simply fit linear IV estimator, available ivreg::ivreg().","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/asmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Additive structural mean model — asmm","text":"binary outcome ASMM estimates causal risk difference.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/asmm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Additive structural mean model — asmm","text":"Clarke PS, Palmer TM, Windmeijer F. Estimating structural mean models multiple instrumental variables using Generalised Method Moments. Statistical Science, 2015, 30, 1, 96-117. doi:10.1214/14-STS503 Palmer TM, Sterne JAC, Harbord RM, Lawlor DA, Sheehan NA, Meng S, Granell R, Davey Smith G, Didelez V. Instrumental variable estimation causal risk ratios causal odds ratios Mendelian randomization analyses. American Journal Epidemiology, 2011, 173, 12, 1392-1403. doi:10.1093/aje/kwr026 Robins JM. analysis randomised nonrandomised AIDS treatment trials using new approach causal inference longitudinal studies. Health Service Research Methodology: Focus AIDS (L. Sechrest, H. Freeman . Mulley, eds.). 1989. 113–159. US Public Health Service, National Center Health Services Research, Washington, DC.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/asmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Additive structural mean model — asmm","text":"","code":"# Single instrument example # Data generation from the example in the ivtools ivglm() helpfile set.seed(9) n    <- 1000 psi0 <- 0.5 Z    <- rbinom(n, 1, 0.5) X    <- rbinom(n, 1, 0.7*Z + 0.2*(1 - Z)) m0   <- plogis(1 + 0.8*X - 0.39*Z) Y    <- rbinom(n, 1, plogis(psi0*X + log(m0/(1 - m0)))) dat1 <- data.frame(Z, X, Y) fit1 <- ivreg::ivreg(Y ~ X | Z, data = dat1) summary(fit1) #>  #> Call: #> ivreg::ivreg(formula = Y ~ X | Z, data = dat1) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -0.8341  0.1659  0.1659  0.2723  0.2723  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.72766    0.02515  28.938   <2e-16 *** #> X            0.10647    0.04743   2.245    0.025 *   #>  #> Diagnostic tests: #>                  df1 df2 statistic p-value     #> Weak instruments   1 998   432.087  <2e-16 *** #> Wu-Hausman         1 997     1.844   0.175     #> Sargan             0  NA        NA      NA     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4105 on 998 degrees of freedom #> Multiple R-Squared: 0.03246,\tAdjusted R-squared: 0.03149  #> Wald test: 5.038 on 1 and 998 DF,  p-value: 0.02501  #>   # Multiple instrument example set.seed(123456) n    <- 1000 psi0 <- 0.5 G1   <- rbinom(n, 2, 0.5) G2   <- rbinom(n, 2, 0.3) G3   <- rbinom(n, 2, 0.4) U    <- runif(n) pX   <- plogis(0.7*G1 + G2 - G3 + U) X    <- rbinom(n, 1, pX) pY   <- plogis(-2 + psi0*X + U) Y    <- rbinom(n, 1, pY) dat2 <- data.frame(G1, G2, G3, X, Y) fit2 <- ivreg::ivreg(Y ~ X | G1 + G2 + G3, data = dat2) summary(fit2) #>  #> Call: #> ivreg::ivreg(formula = Y ~ X | G1 + G2 + G3, data = dat2) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -0.2728 -0.2728 -0.2034  0.7272  0.7966  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.20345    0.05217   3.900 0.000103 *** #> X            0.06932    0.07339   0.945 0.345113     #>  #> Diagnostic tests: #>                  df1 df2 statistic p-value     #> Weak instruments   3 996    63.882  <2e-16 *** #> Wu-Hausman         1 997     0.004   0.951     #> Sargan             2  NA     0.225   0.893     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4327 on 998 degrees of freedom #> Multiple R-Squared: 0.006156,\tAdjusted R-squared: 0.00516  #> Wald test: 0.8922 on 1 and 998 DF,  p-value: 0.3451  #>"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/fsw.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional F-statistic of Sanderson and Windmeijer (2016) — fsw","title":"Conditional F-statistic of Sanderson and Windmeijer (2016) — fsw","text":"fsw calculates conditional F-statistic Sanderson Windmeijer (2016) endogenous variable model.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/fsw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional F-statistic of Sanderson and Windmeijer (2016) — fsw","text":"","code":"fsw(object)  # S3 method for ivreg fsw(object)"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/fsw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional F-statistic of Sanderson and Windmeijer (2016) — fsw","text":"object object class \"ivreg\" containing results IV model fitted ivreg::ivreg() calculate conditional F-statistics endogenous variable.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/fsw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional F-statistic of Sanderson and Windmeijer (2016) — fsw","text":"object class \"fsw\" following elements: fswres matrix columns conditional F-statistics, degrees freedom, residual degrees freedom, p-value. 1 row per endogenous variable. namesendog character vector variable names endogenous variables. nendog number endogenous variables. n sample size used fitted model.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/fsw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conditional F-statistic of Sanderson and Windmeijer (2016) — fsw","text":"Sanderson E Windmeijer F. weak instrument F-test linear IV models multiple endogenous variables. Journal Econometrics, 2016, 190, 2, 212-221, doi:10.1016/j.jeconom.2015.06.004 .","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/fsw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional F-statistic of Sanderson and Windmeijer (2016) — fsw","text":"","code":"require(ivreg) #> Loading required package: ivreg set.seed(12345) n   <- 4000 z1  <- rnorm(n) z2  <- rnorm(n) w1  <- rnorm(n) w2  <- rnorm(n) u   <- rnorm(n) x1  <- z1 + z2 + 0.2*u + 0.1*w1 + rnorm(n) x2  <- z1 + 0.94*z2 - 0.3*u + 0.1*w2 + rnorm(n) y   <- x1 + x2 + w1 + w2 + u dat <- data.frame(w1, w2, x1, x2, y, z1, z2) mod <- ivreg::ivreg(y ~ x1 + x2 + w1 + w2 | z1 + z2 + w1 + w2, data = dat) fsw(mod) #>  #> Model sample size:  4000  #>  #> Sanderson-Windmeijer conditional F-statistics for first stage model: #>    F value d.f. Residual d.f.   Pr(>F)   #> x1 3.42466    1          3995 0.032656 * #> x2 3.42443    1          3995 0.032663 * #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/msmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplicative structural mean model — msmm","title":"Multiplicative structural mean model — msmm","text":"Function providing several methods estimate multiplicative structural mean model (MSMM) Robins (1989).","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/msmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplicative structural mean model — msmm","text":"","code":"msmm(   formula,   instruments,   data,   subset,   na.action,   contrasts = NULL,   estmethod = c(\"gmm\", \"gmmalt\", \"tsls\", \"tslsalt\"),   t0 = NULL,   ... )"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/msmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiplicative structural mean model — msmm","text":"formula, instruments formula specification(s) regression relationship instruments. Either instruments missing formula three parts y ~ x1 + x2 | z1 + z2 + z3 (recommended) formula y ~ x1 + x2 instruments one-sided formula ~ z1 + z2 + z3 (backward compatibility). data optional data frame containing variables model. default variables taken environment formula. subset optional vector specifying subset observations used fitting model. na.action function indicates happen data contain NAs. default set na.action option. contrasts optional list. See contrasts.arg stats::model.matrix(). estmethod Estimation method, please use one \"gmm\" GMM estimation MSMM (default). \"gmmalt\" GMM estimation alternative moment conditions MSMM per Clarke et al. (2015). moment conditions fit user-written Stata command ivpois (Nichols, 2007) official Stata command ivpoisson gmm ..., multiplicative (StataCorp., 2013). \"tsls\" TSLS method fitting MSMM Clarke et al. (2015). binary \\(Y\\) \\(X\\) uses \\(Y*(1-X)\\) outcome \\(Y*X\\) exposure. \"tslsalt\" alternative TSLS method fitting MSMM Clarke et al. (2015). binary \\(Y\\) \\(X\\) uses \\(Y*X\\) outcome \\(Y*(1-X)\\) exposure. t0 vector starting values gmm optimizer. length equal number exposures plus 1. ... arguments passed methods.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/msmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiplicative structural mean model — msmm","text":"object class \"msmm\". list following items: fit object either gmm::gmm() ivreg::ivreg() fit. crrci causal risk ratio/s corresponding 95% confidence interval limits. estmethod specified estmethod. estmethod \"tsls\", \"gmm\", \"gmmalt\": ey0ci estimate treatment/exposure free potential outcome 95% confidence interval limits. estmethod \"tsls\" \"tslsalt\": stage1 object containing first stage regression stats::lm() fit.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/msmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiplicative structural mean model — msmm","text":"Function providing several methods estimate multiplicative structural mean model (MSMM) Robins (1989). methods described Clarke et al. (2015), notably generalised method moments (GMM) estimation MSMM. equivalent estimator MSMM proposed Econometrics Mullahy (1997) discussed several articles Windmeijer (1997, 2002) Cameron Trivedi (2013). implemented user-written Stata command ivpois (Nichols, 2007) implemented official Stata ivpoisson command (StataCorp., 2013).","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/msmm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiplicative structural mean model — msmm","text":"Cameron AC, Trivedi PK. Regression analysis count data. 2nd ed. 2013. New York, Cambridge University Press. ISBN:1107667275 Clarke PS, Palmer TM, Windmeijer F. Estimating structural mean models multiple instrumental variables using Generalised Method Moments. Statistical Science, 2015, 30, 1, 96-117. doi:10.1214/14-STS503 Hernán Robins. Instruments causal inference: Epidemiologist's dream? Epidemiology, 2006, 17, 360-372. doi:10.1097/01.ede.0000222409.00878.37 Mullahy J. Instrumental-variable estimation count data models: applications models cigarette smoking behavior. Review Economics Statistics. 1997, 79, 4, 586-593. doi:10.1162/003465397557169 Nichols . ivpois: Stata module IV/GMM Poisson regression. 2007. url Palmer TM, Sterne JAC, Harbord RM, Lawlor DA, Sheehan NA, Meng S, Granell R, Davey Smith G, Didelez V. Instrumental variable estimation causal risk ratios causal odds ratios Mendelian randomization analyses. American Journal Epidemiology, 2011, 173, 12, 1392-1403. doi:10.1093/aje/kwr026 Robins JM. analysis randomised nonrandomised AIDS treatment trials using new approach causal inference longitudinal studies. Health Service Research Methodology: Focus AIDS (L. Sechrest, H. Freeman . Mulley, eds.). 1989. 113–159. US Public Health Service, National Center Health Services Research, Washington, DC. StataCorp. Stata Base Reference Manual. Release 13. ivpoisson - Poisson model continuous endogenous covariates. 2013. url Windmeijer FAG, Santos Silva JMC. Endogeneity Count Data Models: Application Demand Health Care. Journal Applied Econometrics. 1997, 12, 3, 281-294. doi:10/fdkh4n Windmeijer, F. ExpEnd, Gauss programme non-linear GMM estimation EXPonential models ENDogenous regressors cross section panel data. CEMMAP working paper CWP14/02. 2002. url","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/msmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiplicative structural mean model — msmm","text":"","code":"# Single instrument example # Data generation from the example in the ivtools ivglm() helpfile set.seed(9) n    <- 1000 psi0 <- 0.5 Z    <- rbinom(n, 1, 0.5) X    <- rbinom(n, 1, 0.7*Z + 0.2*(1 - Z)) m0   <- plogis(1 + 0.8*X - 0.39*Z) Y    <- rbinom(n, 1, plogis(psi0*X + log(m0/(1 - m0)))) dat  <- data.frame(Z, X, Y) fit  <- msmm(Y ~ X | Z, data = dat) summary(fit) #>  #> Estimation method: gmm  #>  #> GMM fit summary: #>  #> Call: #> gmm::gmm(g = msmmMoments, x = dat, t0 = t0, vcov = \"iid\") #>  #>  #> Method:  twoStep  #>  #> Coefficients: #>           Estimate     Std. Error   t value      Pr(>|t|)    #> Theta[1]   7.2784e-01   2.5893e-02   2.8110e+01  7.4591e-174 #> Theta[2]   1.3107e-01   6.0307e-02   2.1733e+00   2.9754e-02 #>  #> J-Test: degrees of freedom is 0  #>                 J-test                P-value              #> Test E(g)=0:    1.73561467137432e-06  *******              #>  #> ############# #> Information related to the numerical optimization #> Convergence code =  0  #> Function eval. =  63  #> Gradian eval. =  NA  #>  #> E[Y(0)] with 95% CI: #>         0.025  0.975  #> 0.7278 0.6771 0.7786  #>  #> Causal risk ratio with 95% CI: #>    CRR 0.025 0.975 #> X 1.14 1.013 1.283 #>   # Multiple instrument example set.seed(123456) n    <- 1000 psi0 <- 0.5 G1   <- rbinom(n, 2, 0.5) G2   <- rbinom(n, 2, 0.3) G3   <- rbinom(n, 2, 0.4) U    <- runif(n) pX   <- plogis(0.7*G1 + G2 - G3 + U) X    <- rbinom(n, 1, pX) pY   <- plogis(-2 + psi0*X + U) Y    <- rbinom(n, 1, pY) dat2 <- data.frame(G1, G2, G3, X, Y) fit2 <- msmm(Y ~ X | G1 + G2 + G3, data = dat2) summary(fit2) #>  #> Estimation method: gmm  #>  #> GMM fit summary: #>  #> Call: #> gmm::gmm(g = msmmMoments, x = dat, t0 = t0, vcov = \"iid\") #>  #>  #> Method:  twoStep  #>  #> Coefficients: #>           Estimate    Std. Error  t value     Pr(>|t|)   #> Theta[1]  0.18250038  0.05196181  3.51220233  0.00044441 #> Theta[2]  0.45163610  0.41838256  1.07948119  0.28037327 #>  #> J-Test: degrees of freedom is 2  #>                 J-test   P-value #> Test E(g)=0:    0.27121  0.87319 #>  #> Initial values of the coefficients #>  Theta[1]  Theta[2]  #> 0.1831035 0.4392681  #>  #> ############# #> Information related to the numerical optimization #> Convergence code =  0  #> Function eval. =  59  #> Gradian eval. =  NA  #>  #> E[Y(0)] with 95% CI: #>           0.025   0.975  #> 0.18250 0.08066 0.28434  #>  #> Causal risk ratio with 95% CI: #>     CRR  0.025 0.975 #> X 1.571 0.6919 3.567 #>"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.msmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing MSMM Fits — summary.msmm","title":"Summarizing MSMM Fits — summary.msmm","text":"Summarizing MSMM Fits","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.msmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing MSMM Fits — summary.msmm","text":"","code":"# S3 method for msmm summary(object, ...)  # S3 method for msmm print(x, digits = max(3, getOption(\"digits\") - 3), ...)  # S3 method for summary.msmm print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.msmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing MSMM Fits — summary.msmm","text":"object object class \"msmm\". ... arguments passed methods. S3 summary print methods objects class msmm summary.msmm. x object class \"summary.msmm\". digits number significant digits use printing.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.msmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing MSMM Fits — summary.msmm","text":"summary.msmm() returns object class \"summary.msmm\". list following elements: smry object call either gmm::summary.gmm() ivreg::summary.ivreg(). object object class msmm passed function.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.msmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing MSMM Fits — summary.msmm","text":"","code":"# For examples see the examples at the bottom of help('msmm')"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsps.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing TSPS Fits — summary.tsps","title":"Summarizing TSPS Fits — summary.tsps","text":"S3 print summary methods objects class \"tsps\" print method objects class \"summary.tsps\".","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing TSPS Fits — summary.tsps","text":"","code":"# S3 method for tsps summary(object, ...)  # S3 method for tsps print(x, digits = max(3, getOption(\"digits\") - 3), ...)  # S3 method for summary.tsps print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing TSPS Fits — summary.tsps","text":"object object class \"tsps\". ... arguments passed methods. x object class \"summary.tsps\". digits number significant digits use printing.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing TSPS Fits — summary.tsps","text":"summary.tsps() returns object class \"summary.tsps\". list following elements: smry object call gmm::summary.gmm() object object class tsps passed function.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing TSPS Fits — summary.tsps","text":"","code":"# See the examples at the bottom of help('tsps')"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsri.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing TSRI Fits — summary.tsri","title":"Summarizing TSRI Fits — summary.tsri","text":"S3 print summary methods objects class \"tsri\" print method objects class \"summary.tsri\".","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing TSRI Fits — summary.tsri","text":"","code":"# S3 method for tsri summary(object, ...)  # S3 method for tsri print(x, digits = max(3, getOption(\"digits\") - 3), ...)  # S3 method for summary.tsri print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing TSRI Fits — summary.tsri","text":"object object class \"tsri\". ... arguments passed methods. x object class \"summary.tsri\". digits number significant digits use printing.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing TSRI Fits — summary.tsri","text":"summary.tsri() returns object class \"summary.tsri\". list following elements: smry object call gmm::summary.gmm() object object class tsps passed function.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/summary.tsri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing TSRI Fits — summary.tsri","text":"","code":"# See the examples at the bottom of help('tsri')"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsps.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-stage predictor substitution (TSPS) estimators — tsps","title":"Two-stage predictor substitution (TSPS) estimators — tsps","text":"Terza et al. (2008) give excellent description TSPS estimators. proceed fitting first stage model exposure regressed upon instruments (possibly measured confounders). predicted values exposure obtained. second stage model fitted outcome regressed upon predicted values exposure (possibly measured confounders).","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-stage predictor substitution (TSPS) estimators — tsps","text":"","code":"tsps(   formula,   instruments,   data,   subset,   na.action,   contrasts = NULL,   t0 = NULL,   link = \"identity\",   ... )"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-stage predictor substitution (TSPS) estimators — tsps","text":"formula, instruments formula specification(s) regression relationship instruments. Either instruments missing formula three parts y ~ x1 + x2 | z1 + z2 + z3 (recommended) formula y ~ x1 + x2 instruments one-sided formula ~ z1 + z2 + z3 (backward compatibility). data optional data frame containing variables model. default variables taken environment formula. subset optional vector specifying subset observations used fitting model. na.action function indicates happen data contain NAs. default set na.action option. contrasts optional list. See contrasts.arg stats::model.matrix(). t0 vector starting values gmm optimizer. length equal number exposures plus 1. link character; one \"identity\" (default), \"logadd\", \"logmult\", \"logit\". link function second stage model. \"identity\" corresponds linear regression; \"logadd\" log-additive corresponds Poisson / log-binomial regression; \"logmult\" log-multiplicative corresponds gamma regression; \"logit\" corresponds logistic regression. ... arguments passed methods.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-stage predictor substitution (TSPS) estimators — tsps","text":"object class \"tsps\" following elements fit fitted object class \"gmm\" call gmm::gmm(). estci matrix estimates corresponding confidence interval limits. link character vector containing specificed link function.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-stage predictor substitution (TSPS) estimators — tsps","text":"tsps() performs GMM estimation ensure appropriate standard errors estimates similar approach described Clarke et al. (2015).","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsps.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Two-stage predictor substitution (TSPS) estimators — tsps","text":"Burgess S, CRP CHD Genetics Collaboration. Identifying odds ratio estimated two-stage instrumental variable analysis logistic regression model. Statistics Medicine, 2013, 32, 27, 4726-4747. doi:10.1002/sim.5871 Clarke PS, Palmer TM, Windmeijer F. Estimating structural mean models multiple instrumental variables using Generalised Method Moments. Statistical Science, 2015, 30, 1, 96-117. doi:10.1214/14-STS503 Dukes O, Vansteelandt S. note G-estimation causal risk ratios. American Journal Epidemiology, 2018, 187, 5, 1079-1084. doi:10.1093/aje/kwx347 Palmer TM, Sterne JAC, Harbord RM, Lawlor DA, Sheehan NA, Meng S, Granell R, Davey Smith G, Didelez V. Instrumental variable estimation causal risk ratios causal odds ratios Mendelian randomization analyses. American Journal Epidemiology, 2011, 173, 12, 1392-1403. doi:10.1093/aje/kwr026 Terza JV, Basu , Rathouz PJ. Two-stage residual inclusion estimation: Addressing endogeneity health econometric modeling. Journal Health Economics, 2008, 27, 3, 531-543. doi:10.1016/j.jhealeco.2007.09.009","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-stage predictor substitution (TSPS) estimators — tsps","text":"","code":"# Two-stage predictor substitution estimator # with second stage logistic regression set.seed(9) n            <- 1000 psi0         <- 0.5 Z            <- rbinom(n, 1, 0.5) X            <- rbinom(n, 1, 0.7*Z + 0.2*(1 - Z)) m0           <- plogis(1 + 0.8*X - 0.39*Z) Y            <- rbinom(n, 1, plogis(psi0*X + log(m0/(1 - m0)))) dat          <- data.frame(Z, X, Y) tspslogitfit <- tsps(Y ~ X | Z , data = dat, link = \"logit\") summary(tspslogitfit) #>  #> GMM fit summary: #>  #> Call: #> gmm::gmm(g = tspsLogitMoments, x = dat, t0 = t0, vcov = \"iid\") #>  #>  #> Method:  twoStep  #>  #> Coefficients: #>               Estimate    Std. Error  t value     Pr(>|t|)   #> Z(Intercept)  1.7647e-01  1.7169e-02  1.0278e+01  8.8297e-25 #> ZZ            5.4740e-01  2.6249e-02  2.0854e+01  1.4138e-96 #> (Intercept)   9.7133e-01  1.4042e-01  6.9173e+00  4.6027e-12 #> xhat          6.1451e-01  2.7464e-01  2.2375e+00  2.5256e-02 #>  #> J-Test: degrees of freedom is 0  #>                 J-test               P-value             #> Test E(g)=0:    8.6661572346798e-23  *******             #>  #> ############# #> Information related to the numerical optimization #> Convergence code =  0  #> Function eval. =  169  #> Gradian eval. =  NA  #>  #> Estimates with 95% CI limits: #>              Estimate   0.025  0.975 #> Z(Intercept)   0.1765 0.14282 0.2101 #> ZZ             0.5474 0.49595 0.5988 #> (Intercept)    0.9713 0.69611 1.2465 #> xhat           0.6145 0.07622 1.1528 #>  #> Causal odds ratio with 95% CI limits: #>             Estimate 0.025 0.975 #> (Intercept)    2.641 2.006 3.478 #> xhat           1.849 1.079 3.167 #>"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsri.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-stage residual inclusion (TSRI) estimators — tsri","title":"Two-stage residual inclusion (TSRI) estimators — tsri","text":"excellent description TSRI estimators given Terza et al. (2008). TSRI estimators proceed fitting first stage model exposure regressed upon instruments (possibly measured confounders). first stage residuals estimated. second stage model fitted outcome regressed upon exposure first stage residuals (possibly measured confounders).","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-stage residual inclusion (TSRI) estimators — tsri","text":"","code":"tsri(   formula,   instruments,   data,   subset,   na.action,   contrasts = NULL,   t0 = NULL,   link = \"identity\",   ... )"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-stage residual inclusion (TSRI) estimators — tsri","text":"formula, instruments formula specification(s) regression relationship instruments. Either instruments missing formula three parts y ~ x1 + x2 | z1 + z2 + z3 (recommended) formula y ~ x1 + x2 instruments one-sided formula ~ z1 + z2 + z3 (backward compatibility). data optional data frame containing variables model. default variables taken environment formula. subset optional vector specifying subset observations used fitting model. na.action function indicates happen data contain NAs. default set na.action option. contrasts optional list. See contrasts.arg stats::model.matrix(). t0 vector starting values gmm optimizer. length equal number exposures plus 1. link character; one \"identity\" (default), \"logadd\", \"logmult\", \"logit\". link function second stage model. \"identity\" corresponds linear regression; \"logadd\" log-additive corresponds Poisson / log-binomial regression; \"logmult\" log-multiplicative corresponds gamma regression; \"logit\" corresponds logistic regression. ... arguments passed methods.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-stage residual inclusion (TSRI) estimators — tsri","text":"object class \"tsri\" following elements fit fitted object class \"gmm\" call gmm::gmm(). estci matrix estimates corresponding confidence interval limits. link character vector containing specificed link function.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsri.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-stage residual inclusion (TSRI) estimators — tsri","text":"TSRI estimators sometimes described special case control function estimators. tsri() performs GMM estimation ensure appropriate standard errors estimates similar described described Clarke et al. (2015). Terza (2017) described alternative approach.","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsri.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Two-stage residual inclusion (TSRI) estimators — tsri","text":"Bowden J, Vansteelandt S. Mendelian randomization analysis case-control data using structural mean models. Statistics Medicine, 2011, 30, 6, 678-694. doi:10.1002/sim.4138 Clarke PS, Palmer TM, Windmeijer F. Estimating structural mean models multiple instrumental variables using Generalised Method Moments. Statistical Science, 2015, 30, 1, 96-117. doi:10.1214/14-STS503 Dukes O, Vansteelandt S. note G-estimation causal risk ratios. American Journal Epidemiology, 2018, 187, 5, 1079-1084. doi:10.1093/aje/kwx347 Palmer T, Thompson JR, Tobin MD, Sheehan NA, Burton PR. Adjusting bias unmeasured confounding Mendelian randomization studies binary responses. International Journal Epidemiology, 2008, 37, 5, 1161-1168. doi:10.1093/ije/dyn080 Palmer TM, Sterne JAC, Harbord RM, Lawlor DA, Sheehan NA, Meng S, Granell R, Davey Smith G, Didelez V. Instrumental variable estimation causal risk ratios causal odds ratios Mendelian randomization analyses. American Journal Epidemiology, 2011, 173, 12, 1392-1403. doi:10.1093/aje/kwr026 Terza JV, Basu , Rathouz PJ. Two-stage residual inclusion estimation: Addressing endogeneity health econometric modeling. Journal Health Economics, 2008, 27, 3, 531-543. doi:10.1016/j.jhealeco.2007.09.009 Terza JV. Two-stage residual inclusion estimation: practitioners guide Stata implementation. Stata Journal, 2017, 17, 4, 916-938. doi:10.1177/1536867X1801700409","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/reference/tsri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-stage residual inclusion (TSRI) estimators — tsri","text":"","code":"# Two-stage residual inclusion estimator # with second stage logistic regression set.seed(9) n            <- 1000 psi0         <- 0.5 Z            <- rbinom(n, 1, 0.5) X            <- rbinom(n, 1, 0.7*Z + 0.2*(1 - Z)) m0           <- plogis(1 + 0.8*X - 0.39*Z) Y            <- rbinom(n, 1, plogis(psi0*X + log(m0/(1 - m0)))) dat          <- data.frame(Z, X, Y) tsrilogitfit <- tsri(Y ~ X | Z , data = dat, link = \"logit\") summary(tsrilogitfit) #>  #> GMM fit summary: #>  #> Call: #> gmm::gmm(g = tsriLogitMoments, x = dat, t0 = t0, vcov = \"iid\") #>  #>  #> Method:  twoStep  #>  #> Coefficients: #>               Estimate    Std. Error  t value     Pr(>|t|)   #> Z(Intercept)  1.7647e-01  1.7169e-02  1.0278e+01  8.8297e-25 #> ZZ            5.4740e-01  2.6249e-02  2.0854e+01  1.4138e-96 #> (Intercept)   1.0068e+00  1.4482e-01  6.9520e+00  3.6002e-12 #> X             6.7047e-01  2.8436e-01  2.3578e+00  1.8382e-02 #> res           4.4657e-01  3.4141e-01  1.3080e+00  1.9086e-01 #>  #> J-Test: degrees of freedom is 0  #>                 J-test                P-value              #> Test E(g)=0:    4.28905429706042e-23  *******              #>  #> ############# #> Information related to the numerical optimization #> Convergence code =  0  #> Function eval. =  208  #> Gradian eval. =  NA  #>  #> Estimates with 95% CI limits: #>              Estimate   0.025  0.975 #> Z(Intercept)   0.1765  0.1428 0.2101 #> ZZ             0.5474  0.4959 0.5988 #> (Intercept)    1.0068  0.7229 1.2906 #> X              0.6705  0.1131 1.2278 #> res            0.4466 -0.2226 1.1157 #>  #> Causal odds ratio with 95% CI limits: #>             Estimate  0.025 0.975 #> (Intercept)    2.737 2.0605 3.635 #> X              1.955 1.1198 3.414 #> res            1.563 0.8005 3.052 #>"},{"path":"https://remlapmot.github.io/OneSampleMR/dev/news/index.html","id":"onesamplemr-0139000","dir":"Changelog","previous_headings":"","what":"OneSampleMR 0.1.3.9000","title":"OneSampleMR 0.1.3.9000","text":"Add CITATION file Tweak formatting code helpfile examples vignettes Add subsection README GNU Fortran requirement old versions gmm package macOS Bumped minimum required version R 4.1.0. requirement pbkrtest, dependency car dependency ivreg Bumped version roxygen2 used create package documentation Made use ellipsis ... several function definitions safer using ellipsis package","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/news/index.html","id":"onesamplemr-013","dir":"Changelog","previous_headings":"","what":"OneSampleMR 0.1.3","title":"OneSampleMR 0.1.3","text":"CRAN release: 2023-05-03 Update roxygen2 version used generate documentation Reduce number functions imported packages","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/news/index.html","id":"onesamplemr-012","dir":"Changelog","previous_headings":"","what":"OneSampleMR 0.1.2","title":"OneSampleMR 0.1.2","text":"CRAN release: 2022-05-11 Make use packages Suggests list conditional availability Remove ivtools Suggests due current failure ahaz dependency package build 3 CRAN Linux sub-architectures","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/news/index.html","id":"onesamplemr-011","dir":"Changelog","previous_headings":"","what":"OneSampleMR 0.1.1","title":"OneSampleMR 0.1.1","text":"CRAN release: 2022-04-28 Fix issue causing R CMD check note R 4.2.0","code":""},{"path":"https://remlapmot.github.io/OneSampleMR/dev/news/index.html","id":"onesamplemr-010","dir":"Changelog","previous_headings":"","what":"OneSampleMR 0.1.0","title":"OneSampleMR 0.1.0","text":"CRAN release: 2021-11-12 Initial submission CRAN","code":""}]
